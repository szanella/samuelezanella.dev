@import './variables';

@mixin shards-disappeared {
  .shards-container {
    .shard-wrap {
      &:nth-child(1) .shard,
      &:nth-child(2) .shard,
      &:nth-child(6) .shard,
      &:nth-child(8) .shard,
      &:nth-child(12) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%);
      }

      &:nth-child(3) .shard,
      &:nth-child(4) .shard,
      &:nth-child(5) .shard,
      &:nth-child(9) .shard,
      &:nth-child(10) .shard,
      &:nth-child(11) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: circle(0% at 50% 50%);
      }

      &:nth-child(7) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: polygon(50% 50%, 50% 50%, 50% 50%);
      }
    }
  }
}

@mixin shards-raised {
  .shards-container {
    .shard-wrap {

      @for $i from 1 through $n-shards {
        &:nth-child(#{$i}) .shard {
          background-color: rgba(224, 224, 224, 0);
          $x: 50%;
          $y: 0%;
          @if $i == 1 or $i == 2 or $i == 6 or $i == 12 {
            clip-path: polygon($x $y, $x $y, $x $y, $x $y);
          } @else if $i == 3 or $i == 4 or $i == 5 or $i == 8 or $i == 9 or $i == 10 {
            clip-path: circle(0% at $x $y);
          } @else {
            clip-path: polygon($x $y, $x $y, $x $y);
          }
          transition-delay: $i * 20ms;
        }
      }
    }
  }
}

@mixin window-header($header-h, $flip) {
  $x1: (100% - $window-width) / 2;
  $x2: 100% - $x1;
  $y1: (100% - $window-height) / 2 + $y-offset;
  $y2: $y1 + $header-h;
  @if $flip == true {
    clip-path: polygon($x1 $y1, $x1 $y2, $x2 $y2, $x2 $y1);
  } @else {
    clip-path: polygon($x1 $y1, $x2 $y1, $x2 $y2, $x1 $y2);
  }
}

@mixin window-body($header-h, $flip) {
  $x1: (100% - $window-width) / 2;
  $x2: 100% - $x1;
  $y1: (100% - $window-height) / 2  + $header-h + $y-offset;
  $y2: 100% - (100% - $window-height) / 2 + $y-offset;
  @if $flip == true {
    clip-path: polygon($x1 $y1, $x1 $y2, $x2 $y2, $x2 $y1);
  } @else {
    clip-path: polygon($x1 $y1, $x2 $y1, $x2 $y2, $x1 $y2);
  }
}

// FRONTEND

@mixin content-placeholder-line($type) {
  @if $type == 'h1' {
    background-color: $content-placeholder-colour-dark;
    border-radius: $content-placeholder-border-radius-1;
    height: $content-placeholder-height-1;
  } @else {
    background-color: $content-placeholder-colour-light;
    border-radius: $content-placeholder-border-radius-2;
    height: $content-placeholder-height-2;
  }
}

@mixin user-icon($x, $y) {
  background-color: rgb(255, 255, 255);
  clip-path: circle(1.5% at $x $y);

  &:after {
    background-image: url('assets/svg/person.svg');
    background-position: center center;
    background-repeat: no-repeat;
    background-size: 55%;
    content: ' ';
    height: 6%;
    left: $x - 1.5%;
    position: absolute;
    top: $y - 3%;
    width: 3%;
  }

}

// BACKEND
@mixin terminal-button($n) {
  $x1: (100% - $window-width) / 2;
  $y1: (100% - $window-height) / 2 + $y-offset;
  clip-path: circle($terminal-button-radius at ($x1 + ($terminal-button-radius * 2 + $terminal-button-margin) * $n) ($y1 + $terminal-bar-height / 2));
}

// AI
@mixin neuron($coords) {
  z-index: 1;

  .shard {
    background-color: rgb(224, 224, 224);
    clip-path: circle(4% at nth($coords, 1) (nth($coords, 2) + $y-offset));
  }
}

@mixin synapse($from, $to) {
  z-index: 0;

  .shard {
    background-color: rgb(0, 0, 0);
    clip-path: polygon(
                    nth($from, 1) nth($from, 2) - 0.5% + $y-offset,
                    nth($to, 1) nth($to, 2) - 0.5% + $y-offset,
                    nth($to, 1) nth($to, 2) + 0.5% + $y-offset,
                    nth($from, 1) nth($from, 2) + 0.5% + $y-offset
    )
  }
}
