@import 'colours';

$aspect-ratio: 1/2;
$transition-stagger: 0.05s;
$transition-duration: 0.5s;
$intro-transition-duration: 0.25s;

:root {
  --full-height: calc(var(--vh, 1vh) * 100);
  --shards-container-height: calc(var(--vh, 1vh) * 91);
}

@mixin shards-disappeared {
  .shards-container {
    .shard-wrap {
      &:nth-child(1) .shard,
      &:nth-child(2) .shard,
      &:nth-child(6) .shard,
      &:nth-child(11) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: polygon(50% 50%, 50% 50%, 50% 50%, 50% 50%);
      }

      &:nth-child(3) .shard,
      &:nth-child(4) .shard,
      &:nth-child(5) .shard,
      &:nth-child(8) .shard,
      &:nth-child(9) .shard,
      &:nth-child(10) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: circle(0% at 50% 50%);
      }

      &:nth-child(7) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: polygon(50% 50%, 50% 50%, 50% 50%);
      }
    }
  }
}

// Window
$window-width: 85%;
$window-height: 85%;

@mixin window-header($header-h, $flip) {
  $x1: (100% - $window-width) / 2;
  $x2: 100% - $x1;
  $y1: (100% - $window-height) / 2;
  $y2: $y1 + $header-h;
  @if $flip == true {
    clip-path: polygon($x1 $y1, $x1 $y2, $x2 $y2, $x2 $y1);
  } @else {
    clip-path: polygon($x1 $y1, $x2 $y1, $x2 $y2, $x1 $y2);
  }
}

@mixin window-body($header-h, $flip) {
  $x1: (100% - $window-width) / 2;
  $x2: 100% - $x1;
  $y1: (100% - $window-height) / 2  + $header-h;
  $y2: 100% - (100% - $window-height) / 2;
  @if $flip == true {
    clip-path: polygon($x1 $y1, $x1 $y2, $x2 $y2, $x2 $y1);
  } @else {
    clip-path: polygon($x1 $y1, $x2 $y1, $x2 $y2, $x1 $y2);
  }
}

// Backend
$terminal-bar-height: 3.5%;
$terminal-button-radius: 0.65%;
$terminal-button-margin: 0.2%;
$terminal-cursor-width: 1%;
$terminal-cursor-height: 4%;

@mixin terminal-button($n) {
  $x1: (100% - $window-width) / 2;
  $y1: (100% - $window-height) / 2;
  clip-path: circle($terminal-button-radius at ($x1 + ($terminal-button-radius * 2 + $terminal-button-margin) * $n) ($y1 + $terminal-bar-height / 2));
}

// Frontend
$header-height: 6%;
$mouse-start-x: 78%;
$mouse-start-y: 24%;
$mouse-base-coords: (
        x1: 0%,
        y1: 0%,
        x2: 2%,
        y2: 2%,
        x3: 1%,
        y3: 4%
);
$logo-height: 4%;
$logo-width: 4%;

@function mouse-coords($coords, $x, $y) {
  @return polygon(
                  #{map-get($coords, x1) + $x} #{map-get($coords, y1) + $y},
                  #{map-get($coords, x2) + $x} #{map-get($coords, y2) + $y},
                  #{map-get($coords, x3) + $x} #{map-get($coords, y3) + $y}
  );
}

// AI
@mixin neuron($coords) {
  z-index: 1;

  .shard {
    background-color: rgb(224, 224, 224);
    clip-path: circle(4% at $coords);
  }
}
@mixin synapse($from, $to) {
  z-index: 0;

  .shard {
    background-color: rgb(0, 0, 0);
    clip-path: polygon(
                    nth($from, 1) nth($from, 2) - 0.5%,
                    nth($to, 1) nth($to, 2) - 0.5%,
                    nth($to, 1) nth($to, 2) + 0.5%,
                    nth($from, 1) nth($from, 2) + 0.5%
    )
  }
}

.app {
  align-items: center;
  display: flex;
  flex-direction: column;
  height: calc(92vh);
  height: var(--full-height);
  justify-content: center;
  position: relative;
  transition: background-color $transition-duration ease-in;
  width: 100vw;

  .shards-container {
    height: calc(100vw * #{$aspect-ratio});
    max-height: var(--shards-container-height);
    max-width: 100vw;
    outline: none;
    position: absolute;
    width: calc(var(--shards-container-height) / #{$aspect-ratio});

    .shard-wrap {
      background-color: transparent;
      position: absolute;
      height: 100%;
      width: 100%;

      .shard {
        height: 100%;
        width: 100%;
        transition: all $transition-duration ease-in-out;
      }

      @for $i from 1 through 11 {
        $delay: ($i - 1) * $transition-stagger;
        &:nth-child(#{$i}) .shard {
          transition-delay: $delay;
        }
      }
    }
  }

  .intro-text, .contacts {
    pointer-events: none;
    position: absolute;
    > * {
      opacity: 0;
      transition: all 100ms ease-out;
      transform: translateY(75%);
    }
    //transition: opacity $intro-transition-duration ease-in;
  }

  .intro-text .name {
    color: $tomato;
    margin-bottom: 2vh;
  }

  &.intro {
    @include shards-disappeared;
    background-color: $linen;
    .intro-text {
      pointer-events: auto;
      z-index: 5;

      .name {
        animation: emphasis 0.5s linear 1 (3.5 * $intro-transition-duration);
      }

      > * {
        opacity: 1;
        transition-duration: $intro-transition-duration;
        transform: translateY(0);
      }
      @for $i from 1 through 4 {
        $delay: $i * $intro-transition-duration;
        > *:nth-child(#{$i})  {
          transition-delay: $delay;
        }
      }
    }
  }

  &.backend {
    background-color: $gorse;

    .shard-wrap {
      &:nth-child(1) .shard {
        background-color: rgb(0, 0, 0);
        @include window-body($terminal-bar-height, false)
      }

      &:nth-child(2) .shard {
        background-color: rgb(63, 61, 60);
        @include window-header($terminal-bar-height, false);
      }

      &:nth-child(3) .shard {
        background-color: rgb(252, 64, 66);
        @include terminal-button(1);
      }

      &:nth-child(4) .shard {
        background-color: rgb(224, 192, 76);
        @include terminal-button(2);
      }

      &:nth-child(5) .shard {
        background-color: rgb(114, 191, 71);
        @include terminal-button(3);
      }

      // Cursor
      &:nth-child(6) .shard {
        background-color: rgb(240, 240, 240);
        opacity: 0.75;
        $x1: (100% - $window-width) / 2 + 1.5%;
        $y1: (100% - $window-height) / 2  + $terminal-bar-height + 2%;
        clip-path: polygon(
                                ($x1 $y1),
                                ($x1 + $terminal-cursor-width) $y1,
                                ($x1 + $terminal-cursor-width) ($y1 + $terminal-cursor-height),
                                ($x1 ($y1 + $terminal-cursor-height))
        );

        animation: cursor-blink 1.5s step-end infinite 0.5s;
      }

      &:nth-child(7) .shard {
        background-color: rgb(255, 255, 255);
        clip-path: mouse-coords($mouse-base-coords, 0%, 100%);
      }

      &:nth-child(8) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 0%);
      }

      &:nth-child(9) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 50%);
      }

      &:nth-child(10) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 100%);
      }

      &:nth-child(11) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
      }
    }
  }

  &.frontend {
    background-color: $off-yellow;

    .shard-wrap {
      &:nth-child(1) .shard {
        background-color: rgb(192, 192, 192);
        @include window-header($header-height, true);
      }

      &:nth-child(2) .shard {
        background-color: rgb(224, 224, 224);
        @include window-body($header-height, true);
      }

      &:nth-child(3) .shard {
        background-color: rgb(255, 255, 255);
        $x1: 100% - (100% - $window-width) / 2 - 4%;
        $y1: (100% - $window-height) / 2 + $header-height / 2;
        clip-path: circle(1.5% at $x1 $y1);
      }

      &:nth-child(4) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 0%);
      }

      &:nth-child(5) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 0%);
      }

      // Logo
      &:nth-child(6) .shard {
        background-color: rgb(255, 255, 255);
        $x1: (100% - $window-width) / 2 + 3%;
        $y1: (100% - $window-height) / 2 + ($header-height - $logo-height) / 2;
        clip-path: polygon(
                                ($x1 $y1),
                                ($x1 + $logo-width) $y1,
                                ($x1 + $logo-width) ($y1 + $logo-height),
                                ($x1 ($y1 + $logo-height))
        );
      }

      &:nth-child(7) .shard {
        background-color: rgb(0, 0, 0);
        clip-path: mouse-coords($mouse-base-coords, $mouse-start-x, $mouse-start-y);

        animation: move-around 5s ease-in-out infinite 0.75s;
      }

      &:nth-child(8) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 0%);
      }

      &:nth-child(9) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 50%);
      }

      &:nth-child(10) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: circle(0 at 0% 100%);
      }

      &:nth-child(11) .shard {
        background-color: rgba(0, 0, 0, 0);
        clip-path: polygon(0% 0%, 0% 0%, 0% 0%, 0% 0%);
      }
    }
  }

  &.ai {
    background-color: $ghost-white;

    .shard-wrap {
      // I3 -> H2 -> O1

      &:nth-child(1) {
        @include synapse(40% 70%, 60% 50%);
      }

      // I1 -> H1 -> O1
      &:nth-child(2) {
        @include synapse(40% 30%, 60% 50%);
      }

      // O1
      &:nth-child(3) {
        @include neuron(60% 50%);
      }

      // H1
      &:nth-child(4) {
        @include neuron(50% 40%);
      }

      // H2
      &:nth-child(5) {
        @include neuron(50% 60%);
      }

      // I2 -> H2
      &:nth-child(6) {
        @include synapse(40% 50%, 50% 60%);
      }

      &:nth-child(7) {
        .shard {
          background-color: rgb(255, 255, 255);
          clip-path: mouse-coords($mouse-base-coords, 0%, 100%);
        }
      }

      // I1
      &:nth-child(8) {
        @include neuron(40% 30%);
      }

      // I2
      &:nth-child(9) {
        @include neuron(40% 50%);
      }

      // I3
      &:nth-child(10) {
        @include neuron(40% 70%);
      }

      // I2 -> H1
      &:nth-child(11) {
        @include synapse(40% 50%, 50% 40%);
      }
    }
  }

  .caption {
    bottom: 0;
    height: calc(var(--full-height) - var(--shards-container-height));
    overflow: hidden;
    position: absolute;
    width: 100vw;

    & > div {
      align-items: center;
      display: flex;
      flex-direction: column;
      height: 100%;
      justify-content: flex-end;
      position: absolute;
      text-align: center;
      transition: all #{$transition-duration / 2} ease-out;
      width: 100%;

      &.up {
        transform: translateY(0);
        transition-delay: #{$transition-duration / 2};
      }

      &.down {
        transform: translateY(150%);
      }

      > * {
        flex: 0;
      }

      h2 {
        margin-bottom: 0.75vh;
      }

      // TODO: remove
      p {
        display: none;
      }
    }
  }

  &.contacts {
    @include shards-disappeared;
    background-color: $isabelline;
    .contacts {
      pointer-events: auto;
      z-index: 5;

      > * {
        opacity: 1;
        transition-duration: $intro-transition-duration;
        transform: translateY(0);
      }
      @for $i from 1 through 4 {
        $delay: $i * $intro-transition-duration;
        > *:nth-child(#{$i})  {
          transition-delay: $delay;
        }
      }
    }
  }
}

@keyframes cursor-blink {
  0% {
    opacity: 0.75;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 0.75;
  }
}

@keyframes move-around {
  0% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x, $mouse-start-y);
  }
  8% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x, $mouse-start-y);
  }
  21% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x - 20%, $mouse-start-y + 20%);
  }
  39% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x - 20%, $mouse-start-y + 20%);
  }
  50% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x - 30%, $mouse-start-y + 10%);
  }
  75% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x - 30%, $mouse-start-y + 10%);
  }
  84% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x - 35%, $mouse-start-y + 18%);
  }
  91% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x - 35%, $mouse-start-y + 18%);
  }
  100% {
    clip-path: mouse-coords($mouse-base-coords, $mouse-start-x, $mouse-start-y);
  }
}

@keyframes emphasis {
  50% {
    transform: scale(1.03);
  }
}
